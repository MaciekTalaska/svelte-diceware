{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Diceware.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Diceware from \"./Diceware.svelte\";\n</script>\n\n<style>\n  main {\n    font-family: sans-serif;\n    text-align: center;\n  }\n</style>\n\n<main>\n  <h1>Diceware password generator in Svelte</h1>\n  <Diceware />\n  <small>\n    <p style=\"margin-top: 60px;\">\n      this project on github:\n      <a href=\"https://github.com/MaciekTalaska/svelte-diceware\">\n        svelte-diceware\n      </a>\n    </p>\n  </small>\n</main>\n",
    "<script>\n  import getWordsMap from \"./repo.js\";\n  import getRandom from \"./dice.js\";\n  import { onMount } from \"svelte\";\n\n  const defaultSeparator = \"-\";\n  const MAX_PASS_LENGTH = 10;\n  const MIN_PASS_LENGTH = 4;\n  const defaultLength = MIN_PASS_LENGTH;\n  const defaltLanguage = \"en\";\n\n  let passwordLength = defaultLength;\n  let password = \"\";\n  let separator = defaultSeparator;\n  let language = defaltLanguage;\n  let repository = new Map();\n\n  async function loadDicewareWordList() {\n    if (repository.has(language)) {\n      return;\n    }\n    let words = await getWordsMap(language);\n    repository.set(language, words);\n  }\n\n  onMount(async function() {\n    await loadDicewareWordList();\n  });\n\n  function generatePassword() {\n    password = \"\";\n    let words = repository.get(language);\n    let allwords = new Array(passwordLength);\n    allwords = allwords.fill().map(() => words[getRandom() % words.length]);\n    password = allwords.join(separator);\n  }\n\n  function validatePasswordLength() {\n    if (passwordLength > MAX_PASS_LENGTH) {\n      passwordLength = MAX_PASS_LENGTH;\n    }\n    if (passwordLength < MIN_PASS_LENGTH) {\n      passwordLength = MIN_PASS_LENGTH;\n    }\n  }\n\n  function copyPasswordToClipboard() {\n    let el = document.getElementById(\"passwordArea\");\n    el.select();\n    document.execCommand(\"copy\");\n    el.selectionStart = el.selectionEnd;\n  }\n</script>\n\n<style>\n  button {\n    background: #ff3e00;\n    color: white;\n    border: none;\n    padding: 8px 12px;\n    border-radius: 2px;\n    /* max-width: 60%; */\n    margin: 10px;\n    text-transform: capitalize;\n    padding: 10px 20px;\n  }\n  div {\n    padding-bottom: 10px;\n  }\n  .container {\n    width: 600px;\n    border: 1px solid #ffffff;\n\n    /*margin: 0 auto;*/\n    display: inline-grid;\n    background-color: lightblue;\n    padding: 60px 60px 20px 60px;\n    border-radius: 5px;\n  }\n\n  .column-left {\n    float: left;\n    white-space: nowrap;\n  }\n\n  .column-right {\n    width: 300px;\n    float: right;\n    box-sizing: border-box;\n  }\n\n  .password-area {\n    background-color: aliceblue;\n    font-size: 15px;\n    border: none;\n    border-radius: 5px;\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n  }\n</style>\n\n<div class=\"container\">\n  <div>\n    <label class=\"column-left\" for=\"language_ctrl\">language:</label>\n    <select\n      class=\"column-right\"\n      id=\"language_ctrl\"\n      bind:value={language}\n      on:change={async () => loadDicewareWordList()}>\n      <option value=\"en\">English</option>\n      <option value=\"fi\">Finnish</option>\n      <option value=\"mi\">Maori</option>\n      <option value=\"pl\">Polish</option>\n    </select>\n  </div>\n  <div>\n    <label class=\"column-left\" for=\"password_ctrl\">\n      words per password (4-10):\n    </label>\n    <input\n      id=\"password_ctrl\"\n      class=\"column-right\"\n      type=\"number\"\n      bind:value={passwordLength}\n      onkeyup=\"this.value=this.value.replace(/[^\\d]/,'');\"\n      on:change={validatePasswordLength}\n      min=\"4\"\n      max=\"10\" />\n  </div>\n  <div>\n    <label class=\"column-left\" for=\"separator_ctrl\">separator:</label>\n    <input id=\"separator_ctrl\" class=\"column-right\" bind:value={separator} />\n  </div>\n  <div>\n    <button on:click={generatePassword}>Generate password</button>\n  </div>\n  <div>\n    <textarea\n      id=\"passwordArea\"\n      class=\"password-area\"\n      readonly\n      rows=\"1\"\n      value={password} />\n    <button on:click={copyPasswordToClipboard}>copy to clipboard</button>\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAKE,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,AACpB,CAAC;AC+CD,MAAM,eAAC,CAAC,AACN,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,CAElB,MAAM,CAAE,IAAI,CACZ,cAAc,CAAE,UAAU,CAC1B,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC,AACD,GAAG,eAAC,CAAC,AACH,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,UAAU,eAAC,CAAC,AACV,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CAGzB,OAAO,CAAE,WAAW,CACpB,gBAAgB,CAAE,SAAS,CAC3B,OAAO,CAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAC5B,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,YAAY,eAAC,CAAC,AACZ,KAAK,CAAE,IAAI,CACX,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,KAAK,CACZ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,cAAc,eAAC,CAAC,AACd,gBAAgB,CAAE,SAAS,CAC3B,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,AACf,CAAC"
}