{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Button.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Button from \"./Button.svelte\";\n</script>\n\n<style>\n  main {\n    font-family: sans-serif;\n    text-align: center;\n  }\n</style>\n\n<main>\n  <h1>Diceware password generator in Svelte</h1>\n  <Button />\n</main>",
    "<script>\n  import getWordsMap from \"./repo.js\";\n  import rollDices from './dice.js';\n  import { onMount } from \"svelte\";\n\n\t// let diceCount = 5;\n\tlet passwordLength = 4;\n\t// let words = null; \n\tlet password = \"\";\n\tlet separator = \"-\";\n\tlet language = \"fi\";\n\tlet all_languages = ['en', 'pl', 'fi', 'mi'];\n\tlet repository = new Map();\n\n\tonMount(async function() {\n\t\tlet words =  await getWordsMap(language);\n\t\trepository.set(language, words);\n\t})\n\n\tfunction generatePassword() {\n\t\tpassword = \"\";\n\t\tlet words = repository.get(language).words;\n\t\tconsole.log('words2: ', words);\n\t\tfor (var i = 0; i < passwordLength; i++ ) {\n\t\t\tlet diceCount = repository.get(language).diceCount;\n\t\t\tlet key = rollDices(diceCount);\n\t\t\tlet newWord = words.get(key);\n\t\t\tif (password !== \"\") {\n\t\t\t\tpassword += separator + newWord\n\t\t\t} else {\n\t\t\t\tpassword = newWord;\n\t\t\t}\n\t\t}\n}\n</script>\n\n<style>\n\tbutton {\n\t  background: #ff3e00;\n\t  color: white;\n\t  border: none;\n\t  padding: 8px 12px;\n\t  border-radius: 2px;\n\t  max-width: 60%;\n\t}\n\tdiv {\n\t\tpadding-bottom: 10px;\n\t}\n\t.container {\n\t\twidth: 600px;\n\t\tborder: 1px solid #ffffff;\n\t\tdisplay: inline-grid;\n\t}\n\t.column {\n\t\tdisplay: inline-block;\n\t\twidth: 50%;\n\t}\n</style>\n\n<div class=\"container\">\n\t<div>\n\t\t<label class=\"column\">language</label>\n\t\t<select class=\"column\" bind:value={language} on:change=\"{async (e) => {let words = await getWordsMap(language); repository.set(language, words); } }\">\n\t\t\t<option value=\"en\">English</option>\n\t\t\t<option value=\"pl\">Polish</option>\n\t\t\t<option value=\"fi\">Finnish</option>\n\t\t\t<option value=\"mi\">Maori</option>\n\t\t</select>\n\t</div>\n\t<div >\n\t\t<label class=\"column\">separator:</label>\n\t\t<input class=\"column\" bind:value={separator} />\n\t</div>\n\t<div>\n\t\t<label class=\"column\">words per password (4-10):</label>\n\t\t<input class=\"column\" type=\"number\" bind:value={passwordLength} min=4 max=10/>\n\t</div>\n\t<div>\n\t\t<button on:click={generatePassword}>\n\t\t\tGenerate password\n\t\t</button>\n\t</div>\n\t<!-- <p>generated password:</p> -->\n\t<p>{password}</p>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAKE,IAAI,eAAC,CAAC,AACJ,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,MAAM,AACpB,CAAC;AC6BF,MAAM,cAAC,CAAC,AACN,UAAU,CAAE,OAAO,CACnB,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,aAAa,CAAE,GAAG,CAClB,SAAS,CAAE,GAAG,AAChB,CAAC,AACD,GAAG,cAAC,CAAC,AACJ,cAAc,CAAE,IAAI,AACrB,CAAC,AACD,UAAU,cAAC,CAAC,AACX,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,OAAO,CAAE,WAAW,AACrB,CAAC,AACD,OAAO,cAAC,CAAC,AACR,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,GAAG,AACX,CAAC"
}